

Activity_main.xml 


<?xml version="1.0" encoding="utf-8"?> 
<androidx.constraintlayout.widget.ConstraintLayout 
 xmlns:android="http://schemas.android.com/apk/res/android"  xmlns:app="http://schemas.android.com/apk/res-auto" 
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent" 
 android:layout_height="match_parent" 
 tools:context=".MainActivity"> 
 <TextView 
 android:id="@+id/title" 
 android:layout_width="wrap_content"  android:layout_height="wrap_content"  android:text="My Location" 
 app:layout_constraintVertical_bias=".08"  android:textSize="28sp" 
 android:textColor="#009688" 
 app:layout_constraintBottom_toBottomOf="parent"  app:layout_constraintLeft_toLeftOf="parent"  app:layout_constraintRight_toRightOf="parent"  app:layout_constraintTop_toTopOf="parent" /> 
 <Button 
 android:id="@+id/show_my_location"  android:layout_width="wrap_content"  android:layout_height="wrap_content"  android:text="Show My Location" 
 app:layout_constraintBottom_toBottomOf="parent"  app:layout_constraintLeft_toLeftOf="parent"  app:layout_constraintRight_toRightOf="parent"  app:layout_constraintTop_toTopOf="parent"/>
</androidx.constraintlayout.widget.ConstraintLayout> 


You need to go to your app-level Gradle file and add the google play service dependency.  Using the play service, we can access Fused Location Provider. 
Paste the below code under your dependencies section. 
Code: 


plugins { 
 id 'com.android.application' 
 id 'org.jetbrains.kotlin.android' 
} 
android { 
 namespace 'com.example.myapplicationlocation' 
 compileSdk 33 
 defaultConfig { 
 applicationId "com.example.myapplicationlocation" 
 minSdk 22 
 targetSdk 33 
 versionCode 1 
 versionName "1.0" 
 testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"  } 
 buildTypes { 
 release { 
 minifyEnabled false 
 proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),  'proguard-rules.pro' 
 } 
 } 
 compileOptions { 
 sourceCompatibility JavaVersion.VERSION_1_8 
 targetCompatibility JavaVersion.VERSION_1_8 
 } 
 kotlinOptions { 
 jvmTarget = '1.8' 
 } 
} 
dependencies { 
 implementation 'androidx.core:core-ktx:1.7.0' 
 implementation 'androidx.appcompat:appcompat:1.6.1' 
 implementation 'com.google.android.material:material:1.8.0'  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'  testImplementation 'junit:junit:4.13.2' 
 androidTestImplementation 'androidx.test.ext:junit:1.1.5'  androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'  implementation 'com.google.android.gms:play-services-location:18.0.0'
} 


Code: AndroidManifest.xml 


<?xml version="1.0" encoding="utf-8"?> 
<manifest xmlns:android="http://schemas.android.com/apk/res/android"  xmlns:tools="http://schemas.android.com/tools"> 
 <uses-permission android:name="android.permission.INTERNET"/> 
 <uses-permission  
android:name="android.permission.ACCESS_FINE_LOCATION"/> 
 <uses-permission  
android:name="android.permission.ACCESS_COARSE_LOCATION"/> 
 <application 
 android:allowBackup="true" 
 android:dataExtractionRules="@xml/data_extraction_rules"  android:fullBackupContent="@xml/backup_rules" 
 android:icon="@mipmap/ic_launcher" 
 android:label="@string/app_name" 
 android:roundIcon="@mipmap/ic_launcher_round" 
 android:supportsRtl="true" 
 android:theme="@style/Theme.MyApplicationlocation"  tools:targetApi="31"> 
 <activity
 android:name=".MainActivity" 
 android:exported="true"> 
 <intent-filter> 
 <action android:name="android.intent.action.MAIN" /> 
 <category android:name="android.intent.category.LAUNCHER" />  </intent-filter> 
 <meta-data 
 android:name="android.app.lib_name" 
 android:value="" /> 
 </activity> 
 </application> 
</manifest> 


MainActivity.kt 


package com.example.myapplicationlocation 
import android.content.pm.PackageManager 
import androidx.appcompat.app.AppCompatActivity 
import android.os.Bundle 
import android.widget.Button 
import android.widget.Toast 
import androidx.core.app.ActivityCompat
import com.google.android.gms.location.FusedLocationProviderClient import com.google.android.gms.location.LocationServices 
class MainActivity : AppCompatActivity() 
{ 
 lateinit var locationProvideClient:FusedLocationProviderClient  lateinit var showLocation:Button 
 override fun onCreate(savedInstanceState: Bundle?)  { 
 super.onCreate(savedInstanceState) 
 setContentView(R.layout.activity_main) 
 locationProvideClient =  
LocationServices.getFusedLocationProviderClient(this) 
 showLocation = findViewById(R.id.show_my_location)  //applying onClick Listener on the button 
 showLocation.setOnClickListener{ 
 getYourCurrentLocation() 
 }
 } 
 private fun getYourCurrentLocation() 
 { 
 if(ActivityCompat.checkSelfPermission(this, 
 android.Manifest.permission.ACCESS_FINE_LOCATION) !=  PackageManager.PERMISSION_GRANTED && 
 ActivityCompat.checkSelfPermission(this, 
 android.Manifest.permission.ACCESS_COARSE_LOCATION) !=  PackageManager.PERMISSION_GRANTED) 
 { 
 ActivityCompat.requestPermissions( 
 this, 
 arrayOf(android.Manifest.permission.ACCESS_FINE_LOCATION),  909) 
 return 
 }  
 val task = locationProvideClient.lastLocation 
 task.addOnSuccessListener { 
 if(it!=null)
 { 
 Toast.makeText(this,"Latitude : ${it.latitude} \n Longitude:  ${it.longitude}", 
 Toast.LENGTH_LONG).show() 
 } 
 else 
 { 
 Toast.makeText(this, 
 "Your location can't be displayed", 
 Toast.LENGTH_LONG).show() 
 } 
 } 
 } 
} 
